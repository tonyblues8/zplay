#!/bin/bash
#[ ! -f "/Library/LaunchDaemons/com.zdns.plist" ] && sudo cp com.zdns.plist /Library/LaunchDaemons/ && sudo chmod 644 /Library/LaunchDaemons/com.zdns.plist && sudo chown root:wheel /Library/LaunchDaemons/com.zdns.plist
#
#[ ! -f "/etc/newsyslog.d/com.zdns.conf" ] && sudo cp com.zdns.conf /etc/newsyslog.d/ && sudo chmod 644 /etc/newsyslog.d/com.zdns.conf && sudo chown root:wheel /etc/newsyslog.d/com.zdns.conf
#
#sudo launchctl list | grep -q com.zdns
#if [ $? -ne 0 ]; then
#    echo "服务未注册"
#    [ -f "/Library/LaunchDaemons/com.zdns.plist" ] && sudo launchctl stop com.zdns && sudo launchctl unload /Library/LaunchDaemons/com.zdns.plist && sudo launchctl load /Library/LaunchDaemons/com.zdns.plist && sudo launchctl start com.zdns
#else
#    echo "服务已存在"
#fi


PID_FILE="/usr/local/var/run/zdns.pid"
# 创建目录
sudo mkdir -p /usr/local/var/run
sudo chmod 777 /usr/local/var/run

echo $$ > $PID_FILE && chmod 644 $PID_FILE

trap 'rm -f $PID_FILE' EXIT

# 日志文件配置
LOG_FILE="/var/log/zdns.log"
ERROR_LOG="/var/log/zdns-error.log"

# 创建日志文件（如果不存在）并设置权限
touch "$LOG_FILE" "$ERROR_LOG"
chmod 640 "$LOG_FILE" "$ERROR_LOG"
chown root:admin "$LOG_FILE" "$ERROR_LOG"

# 安全重定向函数
redirect_logs() {
    exec >>"$LOG_FILE" 2>>"$ERROR_LOG"
    exec 3>&1 4>&2  # 备份原文件描述符
}

# 日志轮转信号处理
trap 'redirect_logs' HUP

# 主程序
redirect_logs

# 后续脚本内容...
echo "$(date) 服务启动"

# 配置Cloudflare API信息
CF_API_KEY=""  # 替换为你的API令牌
CF_ZONE_ID=""              # 替换为你的区域ID
DOMAIN="mv.6deng.cn"                   # 替换为你的域名
IP_FILE="/tmp/current_ip.txt"          # 存储当前IP的文件路径
I_TIME=120
PROXY_IPS=("101.32.98.140" "159.54.179.52")

# 依赖检查
if ! command -v jq &> /dev/null; then
    echo "错误：jq未安装，请先安装jq。"
    exit 1
fi

if ! command -v curl &> /dev/null; then
    echo "错误：curl未安装，请先安装curl。"
    exit 1
fi

# 检查必要配置
if [ -z "$CF_API_KEY" ] || [ -z "$CF_ZONE_ID" ] || [ -z "$DOMAIN" ]; then
    echo "错误：请正确配置所有必需变量。"
    exit 1
fi

# 获取外网IP（多源备用）
get_external_ip() {
    local ip
    ip=$(curl -s --max-time 5 https://ifconfig.me)
    [ -n "$ip" ] || ip=$(curl -s --max-time 5 https://ipecho.net/plain)
    [ -n "$ip" ] || ip=$(curl -s --max-time 5 https://icanhazip.com)
    [ -n "$ip" ] || ip=$(dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null)
    echo "$ip" | grep -oE '[0-9]{1,3}(\.[0-9]{1,3}){3}'  # 简单验证IP格式
}

# 主循环
while true; do
    current_ip=$(get_external_ip)
    if [ -z "$current_ip" ]; then
        echo "$(date): 错误：无法获取有效外网IP"
        sleep $I_TIME
        continue
    fi

    # 读取旧IP
    [ -f "$IP_FILE" ] && old_ip=$(cat "$IP_FILE") || old_ip=""

    # IP未变化
    if [ "$current_ip" == "$old_ip" ]; then
        echo "$(date): IP未变化 ($current_ip)"
        sleep $I_TIME
        continue
    fi

    # IP未变化
    #if [[ "$current_ip" == "101.32.98.140" || "$current_ip" == "159.54.179.52" ]]; then
    #if [ "$current_ip" = "101.32.98.140" -o "$current_ip" = "159.54.179.52" ]; then
    if [[ " ${PROXY_IPS[@]} " =~ " ${current_ip} " ]]; then
        echo "$(date): 代理ip ($current_ip)，不需要修改dns记录"
        sleep $I_TIME
        continue
    fi

    echo "$(date): 检测到IP变化：旧IP $old_ip -> 新IP $current_ip"

    # 获取现有DNS记录
    response=$(curl -sS -X GET \
        "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records?type=A&name=$DOMAIN" \
        -H "Authorization: Bearer $CF_API_KEY" \
        -H "Content-Type: application/json")

    # 检查API响应
    if ! success=$(echo "$response" | jq -r '.success'); then
        echo "$(date): API响应解析失败"
        sleep $I_TIME
        continue
    fi

    if [ "$success" != "true" ]; then
        echo "$(date): 获取DNS记录失败：$(echo "$response" | jq -r '.errors[0].message')"
        sleep $I_TIME
        continue
    fi

    # 处理DNS记录
    record_count=$(echo "$response" | jq -r '.result | length')
    if [ "$record_count" -eq 0 ]; then
        # 创建新记录
        data=$(jq -n \
            --arg name "$DOMAIN" \
            --arg ip "$current_ip" \
            '{
                type: "A",
                name: $name,
                content: $ip,
                ttl: 120,
                proxied: false
            }')

        result=$(curl -sS -X POST \
            "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records" \
            -H "Authorization: Bearer $CF_API_KEY" \
            -H "Content-Type: application/json" \
            --data "$data")

        if echo "$result" | jq -e '.success' >/dev/null; then
            echo "$(date): 成功创建DNS记录"
            echo "$current_ip" > "$IP_FILE"
        else
            echo "$(date): 创建记录失败：$(echo "$result" | jq -r '.errors[0].message')"
        fi
    else
        # 更新现有记录
        record_id=$(echo "$response" | jq -r '.result[0].id')
        data=$(jq -n \
            --arg name "$DOMAIN" \
            --arg ip "$current_ip" \
            '{
                type: "A",
                name: $name,
                content: $ip,
                ttl: 120,
                proxied: false
            }')

        result=$(curl -sS -X PUT \
            "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records/$record_id" \
            -H "Authorization: Bearer $CF_API_KEY" \
            -H "Content-Type: application/json" \
            --data "$data")

        if echo "$result" | jq -e '.success' >/dev/null; then
            echo "$(date): 成功更新DNS记录"
            echo "$current_ip" > "$IP_FILE"
        else
            echo "$(date): 更新记录失败：$(echo "$result" | jq -r '.errors[0].message')"
        fi
    fi

    sleep $I_TIME  # 每5分钟检查一次
done