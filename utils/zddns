#!/bin/bash

# 启用严格模式
set -o errexit -o nounset -o pipefail

# 配置参数
PLIST_SOURCE="com.zdns.plist"
CONF_SOURCE="com.zdns.conf"
SERVICE_LABEL="com.zdns"

# 定义颜色输出
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# 创建目标目录（如果不存在）
sudo mkdir -p /Library/LaunchDaemons /etc/newsyslog.d

# ---- 通用函数 ----
# 带时间戳的彩色日志输出
log() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    case $level in
        "INFO") color=${NC} ;;
        "SUCCESS") color=${GREEN} ;;
        "WARNING") color=${YELLOW} ;;
        "ERROR") color=${RED} ;;
        *) color=${NC} ;;
    esac
    echo -e "${color}[${timestamp}] [${level}] ${message}${NC}"
}

# 前置依赖检查
check_dependencies() {
    local missing=()
    local required_cmds=(bzcat newsyslog diff install perl)

    for cmd in "${required_cmds[@]}"; do
        if ! command -v $cmd &>/dev/null; then
            missing+=("$cmd")
        fi
    done

    if [ ${#missing[@]} -gt 0 ]; then
        log "ERROR" "缺失必要命令: ${missing[*]}"
        exit 1
    fi
}

# 文件部署函数
deploy_config() {
    local src=$1
    local dest=$2

    if ! sudo diff -q "${src}" "${dest}" >/dev/null 2>&1; then
        sudo install -m 0644 -o root -g wheel "${src}" "${dest}"
        log "SUCCESS" "配置已更新: ${dest}"
        return 0
    fi
    return 1
}

# ---- 服务管理 ----
service_exists() {
    sudo launchctl print "system/${SERVICE_LABEL}" >/dev/null 2>&1
}

restart_service() {
    log "INFO" "正在重启服务..."
    if ! sudo launchctl kickstart -k "system/${SERVICE_LABEL}"; then
        log "ERROR" "服务重启失败"
        exit 1
    fi
}

# ---- 日志配置验证 ----
verify_log_config() {
    local conf_file="/etc/newsyslog.d/${SERVICE_LABEL}.conf"
    local log_file="/var/log/zdns.log"
    local error_log="/var/log/zdns-error.log"

    # 0. 停止服务避免日志干扰
    log "INFO" "暂停服务以进行日志验证..."
    sudo launchctl stop "system/${SERVICE_LABEL}" || true
    sleep 2

    # 1. 预检：确保日志文件状态
    for f in "$log_file" "$error_log"; do
        sudo touch "$f"
        sudo chmod 640 "$f"
        sudo chown root:admin "$f"
        sudo sh -c "> '$f'"  # 清空文件内容
    done

    # 2. 配置文件检查
    if [ ! -f "$conf_file" ]; then
        log "ERROR" "日志配置文件不存在: $conf_file"
        exit 1
    fi

    # 3. 写入测试内容
    local test_id="TEST_$(date +%s)"
    local test_content="[${test_id}] LOG ROTATION TEST"
    echo "$test_content" | sudo tee "$log_file" >/dev/null
    sync && sleep 1  # 强制写入并等待

    # 4. 执行日志轮转
    log "INFO" "执行强制日志轮转..."
    if ! sudo newsyslog -F -f "$conf_file"; then
        log "ERROR" "日志轮转执行失败"
        exit 1
    fi

    # 5. 验证轮转结果
    sleep 2  # 确保压缩完成
    local rotated_file="${log_file}.0.bz2"

    # 调试输出压缩内容
    log "DEBUG" "压缩文件内容："
    sudo bzcat "$rotated_file"

    if ! sudo bzcat "$rotated_file" | grep -q "$test_id"; then
        log "ERROR" "测试标识未找到"
        exit 1
    fi

    # 6. 清理测试痕迹
    log "INFO" "清理测试数据..."
    sudo rm -f "$rotated_file"
    sudo sh -c "> '$log_file'"  # 再次清空日志文件

    log "SUCCESS" "日志配置验证通过"
}

# ---- 备份恢复机制 ----
create_backup() {
    local backup_dir="/tmp/zdns_backup_$(date +%s)"
    mkdir -p "$backup_dir"

    sudo cp -a "/Library/LaunchDaemons/${SERVICE_LABEL}.plist" "$backup_dir" 2>/dev/null || true
    sudo cp -a "/etc/newsyslog.d/${SERVICE_LABEL}.conf" "$backup_dir" 2>/dev/null || true

    echo "$backup_dir"
}

restore_backup() {
    local backup_dir=$1

    log "WARNING" "开始配置回滚..."
    sudo cp -a "$backup_dir/${SERVICE_LABEL}.plist" "/Library/LaunchDaemons/" 2>/dev/null || true
    sudo cp -a "$backup_dir/${SERVICE_LABEL}.conf" "/etc/newsyslog.d/" 2>/dev/null || true
    #sudo launchctl bootout "system/${SERVICE_LABEL}" 2>/dev/null || true
    sudo launchctl stop "system/${SERVICE_LABEL}" 2>/dev/null || true
    sudo launchctl unload "/Library/LaunchDaemons/${SERVICE_LABEL}.plist" 2>/dev/null || true
    sudo launchctl bootout "system/${SERVICE_LABEL}" 2>/dev/null || true
    #&& sudo launchctl load /Library/LaunchDaemons/$SERVICE_LABEL.plist && sudo launchctl start $SERVICE_LABEL || true
    if ! sudo launchctl bootstrap system "/Library/LaunchDaemons/${SERVICE_LABEL}.plist"; then
        log "ERROR" "服务重新注册失败"
        restore_backup "$backup_dir"
        exit 1
    fi

    log "WARNING" "已恢复至备份版本: $(ls -l "$backup_dir")"
}

# ---- 主流程 ----
main() {
    check_dependencies
    local backup_dir=$(create_backup)

    # 部署配置
    local config_changed=false

    if deploy_config "${PLIST_SOURCE}" "/Library/LaunchDaemons/${SERVICE_LABEL}.plist"; then
        config_changed=true
    fi

    if deploy_config "${CONF_SOURCE}" "/etc/newsyslog.d/${SERVICE_LABEL}.conf"; then
        config_changed=true
    fi

    # 服务管理
    if service_exists; then
        if [ "$config_changed" = true ]; then
            log "WARNING" "检测到配置变更，重新加载服务"
            #sudo launchctl stop $SERVICE_LABEL && sudo launchctl unload /Library/LaunchDaemons/$SERVICE_LABEL.plist
            sudo launchctl stop "system/${SERVICE_LABEL}" 2>/dev/null || true
            sudo launchctl unload "/Library/LaunchDaemons/${SERVICE_LABEL}.plist" 2>/dev/null || true
            sudo launchctl bootout "system/${SERVICE_LABEL}" 2>/dev/null || true
            #&& sudo launchctl load /Library/LaunchDaemons/$SERVICE_LABEL.plist && sudo launchctl start $SERVICE_LABEL || true
            if ! sudo launchctl bootstrap system "/Library/LaunchDaemons/${SERVICE_LABEL}.plist"; then
                log "ERROR" "服务重新注册失败"
                restore_backup "$backup_dir"
                exit 1
            fi
            # 日志验证
            if verify_log_config; then
                log "SUCCESS" "日志轮转执行成功"
                restart_service
            else
                restore_backup "$backup_dir"
                log "ERROR" "日志轮转执行失败"
                exit 1
            fi
            sudo launchctl list | grep -q com.zdns
            if [ $? -ne 0 ]; then
                log "ERROR" "服务重新注册失败"
                restore_backup "$backup_dir"
                exit 1
            else
                log "SUCCESS" "服务重新注册成功"

                # 最终状态检查
                log "INFO" "\n=== 服务状态 ==="
                sudo launchctl print "system/${SERVICE_LABEL}" | grep -E 'pid|state|exit'

                log "INFO" "\n=== 日志状态 ==="
                ls -lh /var/log/zdns*
            fi
            sleep 2
        else
            log "INFO" "配置未变更，服务已经注册"
        fi
    else
        log "INFO" "首次部署服务"
        if ! sudo launchctl bootstrap system "/Library/LaunchDaemons/${SERVICE_LABEL}.plist"; then
            log "ERROR" "服务初始化失败"
            restore_backup "$backup_dir"
            exit 1
        fi
    fi

    # 清理备份
    rm -rf "$backup_dir"
}

# ---- 执行入口 ----
main
exit 0